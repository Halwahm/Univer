//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace lab4.WebForm.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="A", Namespace="http://HAN/")]
    [System.SerializableAttribute()]
    public partial class A : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sField;
        
        private int kField;
        
        private float fField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string s {
            get {
                return this.sField;
            }
            set {
                if ((object.ReferenceEquals(this.sField, value) != true)) {
                    this.sField = value;
                    this.RaisePropertyChanged("s");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int k {
            get {
                return this.kField;
            }
            set {
                if ((this.kField.Equals(value) != true)) {
                    this.kField = value;
                    this.RaisePropertyChanged("k");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public float f {
            get {
                return this.fField;
            }
            set {
                if ((this.fField.Equals(value) != true)) {
                    this.fField = value;
                    this.RaisePropertyChanged("f");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://HAN/", ConfigurationName="ServiceReference1.SimplexSoap")]
    public interface SimplexSoap {
        
        // CODEGEN: Generating message contract since the wrapper name (AddMethod) of message AddMethod does not match the default value (Add)
        [System.ServiceModel.OperationContractAttribute(Action="http://HAN/AddMethod", ReplyAction="*")]
        lab4.WebForm.ServiceReference1.AddMethod1 Add(lab4.WebForm.ServiceReference1.AddMethod request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://HAN/AddMethod", ReplyAction="*")]
        System.Threading.Tasks.Task<lab4.WebForm.ServiceReference1.AddMethod1> AddAsync(lab4.WebForm.ServiceReference1.AddMethod request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://HAN/AddS", ReplyAction="*")]
        int AddS(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://HAN/AddS", ReplyAction="*")]
        System.Threading.Tasks.Task<int> AddSAsync(int x, int y);
        
        // CODEGEN: Generating message contract since the wrapper name (ConcatMethod) of message ConcatMethod does not match the default value (Concat)
        [System.ServiceModel.OperationContractAttribute(Action="http://HAN/ConcatMethod", ReplyAction="*")]
        lab4.WebForm.ServiceReference1.ConcatMethod1 Concat(lab4.WebForm.ServiceReference1.ConcatMethod request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://HAN/ConcatMethod", ReplyAction="*")]
        System.Threading.Tasks.Task<lab4.WebForm.ServiceReference1.ConcatMethod1> ConcatAsync(lab4.WebForm.ServiceReference1.ConcatMethod request);
        
        // CODEGEN: Generating message contract since the wrapper name (SumMethod) of message SumMethod does not match the default value (Sum)
        [System.ServiceModel.OperationContractAttribute(Action="http://HAN/SumMethod", ReplyAction="*")]
        lab4.WebForm.ServiceReference1.SumMethod1 Sum(lab4.WebForm.ServiceReference1.SumMethod request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://HAN/SumMethod", ReplyAction="*")]
        System.Threading.Tasks.Task<lab4.WebForm.ServiceReference1.SumMethod1> SumAsync(lab4.WebForm.ServiceReference1.SumMethod request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddMethod", WrapperNamespace="http://HAN/", IsWrapped=true)]
    public partial class AddMethod {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://HAN/", Order=0)]
        public int x;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://HAN/", Order=1)]
        public int y;
        
        public AddMethod() {
        }
        
        public AddMethod(int x, int y) {
            this.x = x;
            this.y = y;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddMethodResponse", WrapperNamespace="http://HAN/", IsWrapped=true)]
    public partial class AddMethod1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://HAN/", Order=0)]
        public int AddMethodResult;
        
        public AddMethod1() {
        }
        
        public AddMethod1(int AddMethodResult) {
            this.AddMethodResult = AddMethodResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConcatMethod", WrapperNamespace="http://HAN/", IsWrapped=true)]
    public partial class ConcatMethod {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://HAN/", Order=0)]
        public string s;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://HAN/", Order=1)]
        public double d;
        
        public ConcatMethod() {
        }
        
        public ConcatMethod(string s, double d) {
            this.s = s;
            this.d = d;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConcatMethodResponse", WrapperNamespace="http://HAN/", IsWrapped=true)]
    public partial class ConcatMethod1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://HAN/", Order=0)]
        public string ConcatMethodResult;
        
        public ConcatMethod1() {
        }
        
        public ConcatMethod1(string ConcatMethodResult) {
            this.ConcatMethodResult = ConcatMethodResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SumMethod", WrapperNamespace="http://HAN/", IsWrapped=true)]
    public partial class SumMethod {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://HAN/", Order=0)]
        public lab4.WebForm.ServiceReference1.A a1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://HAN/", Order=1)]
        public lab4.WebForm.ServiceReference1.A a2;
        
        public SumMethod() {
        }
        
        public SumMethod(lab4.WebForm.ServiceReference1.A a1, lab4.WebForm.ServiceReference1.A a2) {
            this.a1 = a1;
            this.a2 = a2;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SumMethodResponse", WrapperNamespace="http://HAN/", IsWrapped=true)]
    public partial class SumMethod1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://HAN/", Order=0)]
        public lab4.WebForm.ServiceReference1.A SumMethodResult;
        
        public SumMethod1() {
        }
        
        public SumMethod1(lab4.WebForm.ServiceReference1.A SumMethodResult) {
            this.SumMethodResult = SumMethodResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SimplexSoapChannel : lab4.WebForm.ServiceReference1.SimplexSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SimplexSoapClient : System.ServiceModel.ClientBase<lab4.WebForm.ServiceReference1.SimplexSoap>, lab4.WebForm.ServiceReference1.SimplexSoap {
        
        public SimplexSoapClient() {
        }
        
        public SimplexSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SimplexSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimplexSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimplexSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        lab4.WebForm.ServiceReference1.AddMethod1 lab4.WebForm.ServiceReference1.SimplexSoap.Add(lab4.WebForm.ServiceReference1.AddMethod request) {
            return base.Channel.Add(request);
        }
        
        public int Add(int x, int y) {
            lab4.WebForm.ServiceReference1.AddMethod inValue = new lab4.WebForm.ServiceReference1.AddMethod();
            inValue.x = x;
            inValue.y = y;
            lab4.WebForm.ServiceReference1.AddMethod1 retVal = ((lab4.WebForm.ServiceReference1.SimplexSoap)(this)).Add(inValue);
            return retVal.AddMethodResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<lab4.WebForm.ServiceReference1.AddMethod1> lab4.WebForm.ServiceReference1.SimplexSoap.AddAsync(lab4.WebForm.ServiceReference1.AddMethod request) {
            return base.Channel.AddAsync(request);
        }
        
        public System.Threading.Tasks.Task<lab4.WebForm.ServiceReference1.AddMethod1> AddAsync(int x, int y) {
            lab4.WebForm.ServiceReference1.AddMethod inValue = new lab4.WebForm.ServiceReference1.AddMethod();
            inValue.x = x;
            inValue.y = y;
            return ((lab4.WebForm.ServiceReference1.SimplexSoap)(this)).AddAsync(inValue);
        }
        
        public int AddS(int x, int y) {
            return base.Channel.AddS(x, y);
        }
        
        public System.Threading.Tasks.Task<int> AddSAsync(int x, int y) {
            return base.Channel.AddSAsync(x, y);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        lab4.WebForm.ServiceReference1.ConcatMethod1 lab4.WebForm.ServiceReference1.SimplexSoap.Concat(lab4.WebForm.ServiceReference1.ConcatMethod request) {
            return base.Channel.Concat(request);
        }
        
        public string Concat(string s, double d) {
            lab4.WebForm.ServiceReference1.ConcatMethod inValue = new lab4.WebForm.ServiceReference1.ConcatMethod();
            inValue.s = s;
            inValue.d = d;
            lab4.WebForm.ServiceReference1.ConcatMethod1 retVal = ((lab4.WebForm.ServiceReference1.SimplexSoap)(this)).Concat(inValue);
            return retVal.ConcatMethodResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<lab4.WebForm.ServiceReference1.ConcatMethod1> lab4.WebForm.ServiceReference1.SimplexSoap.ConcatAsync(lab4.WebForm.ServiceReference1.ConcatMethod request) {
            return base.Channel.ConcatAsync(request);
        }
        
        public System.Threading.Tasks.Task<lab4.WebForm.ServiceReference1.ConcatMethod1> ConcatAsync(string s, double d) {
            lab4.WebForm.ServiceReference1.ConcatMethod inValue = new lab4.WebForm.ServiceReference1.ConcatMethod();
            inValue.s = s;
            inValue.d = d;
            return ((lab4.WebForm.ServiceReference1.SimplexSoap)(this)).ConcatAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        lab4.WebForm.ServiceReference1.SumMethod1 lab4.WebForm.ServiceReference1.SimplexSoap.Sum(lab4.WebForm.ServiceReference1.SumMethod request) {
            return base.Channel.Sum(request);
        }
        
        public lab4.WebForm.ServiceReference1.A Sum(lab4.WebForm.ServiceReference1.A a1, lab4.WebForm.ServiceReference1.A a2) {
            lab4.WebForm.ServiceReference1.SumMethod inValue = new lab4.WebForm.ServiceReference1.SumMethod();
            inValue.a1 = a1;
            inValue.a2 = a2;
            lab4.WebForm.ServiceReference1.SumMethod1 retVal = ((lab4.WebForm.ServiceReference1.SimplexSoap)(this)).Sum(inValue);
            return retVal.SumMethodResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<lab4.WebForm.ServiceReference1.SumMethod1> lab4.WebForm.ServiceReference1.SimplexSoap.SumAsync(lab4.WebForm.ServiceReference1.SumMethod request) {
            return base.Channel.SumAsync(request);
        }
        
        public System.Threading.Tasks.Task<lab4.WebForm.ServiceReference1.SumMethod1> SumAsync(lab4.WebForm.ServiceReference1.A a1, lab4.WebForm.ServiceReference1.A a2) {
            lab4.WebForm.ServiceReference1.SumMethod inValue = new lab4.WebForm.ServiceReference1.SumMethod();
            inValue.a1 = a1;
            inValue.a2 = a2;
            return ((lab4.WebForm.ServiceReference1.SimplexSoap)(this)).SumAsync(inValue);
        }
    }
}
