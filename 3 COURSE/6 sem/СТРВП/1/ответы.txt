9. Дайте определение понятию «Интернет».
	1) сеть на основе TCP/IP;
	2) стандарты Internet (RFC, STD);
	3) службы Интернет (DNS,
		SMTP/POP3/IMAP, WWW, FTP,
		Telnet, SSH,…);
	4) организации, управляющие сетью Internet (ISOC, IETF, W3C, ICANN, IANA, …).
10. Дайте определение понятию «Служба Интернет».
	это протоколы прикладного уровня, позволяющие функционировать сети Интернет
11. Дайте определение понятию «Узел сети Интернет».
	устройство, имеющее IP-адрес и подключенное к сети Интернет. Каждый узел характеризуется своей программно-аппаратной платформой – 
	аппаратурой и операционной системой.
12. Дайте определение понятию «клиент-серверное приложение». 
	Это распределённое приложение, состоящее из двух компонент: клиента и сервера, взаимодействующих между собой по определённым
	протоколам. Инициатор соединения - клиент
13. Дайте определение понятию «сетевой протокол».
	Протокол, использующийся для взаимодействия узлов сети 
14. Перечислите основные свойства протокола HTTP.
	• версии HTTP/1.1 – действующий (текстовый), HTTP/2 – действующий (бинарный), HTTP/3 (раньше HTTP-over-QUIC, стадия черновика); 
	• два типа абонентов: клиент и сервер; 
	• два типа сообщений: request и response; 
	• от клиента к серверу – request; 
	• от сервера к клиенту – response; 
	• на один request всегда один response, иначе ошибка; 
	• одному response всегда один request, иначе ошибка; 
	• stateless; • TCP-порты: 80, 443; 
	• для адресации используется URI или URL; 
	• поддерживается W3C, описан в нескольких RFC.
15. Перечислите состав информации, пересылаемой в HTTP-запросе.
	метод, URI, версия, заголовки, тело
16. Перечислите состав информации, пересылаемой в HTTP-ответе.
	версия, код состояния, пояснение к коду, заголовки, тело
17. Перечислите группы заголовков HTTP.
	общие, только для запросов, только для ответов, для сущности в ответах и запросах
18. Дайте определение понятию «web-приложение». 
	клиент-серверное приложение, у которого клиент и сервер взаимодействуют по некоторому протоколу прикладного уровня
19. Дайте определение понятиям «frontend» и «backend». 
	клиентская часть и серверная часть
20. Дайте определение понятию «кроссплатформенное приложение». 
	приложение, способное работать на более чем одной программно-аппаратной (аппаратура + операционная система) платформе.
21. Изобразите и поясните общую схему web-приложения.
	
22. Назовите основные технологии разработки серверных кроссплатформенных приложений.
	• PHP / Apache, LAMP;
	• Java / JVM / Application Server;
	• C# / ASP.NET CORE;
	• Python / Django;
	• Ruby on Rails;
	• JS / Node.js, ….
23. Поясните понятие «асинхронная операция».
	запрос, при котором поток, выдавший http-запрос, не блокируется до поступления запроса; для обработки ответа применяется функция
	обратного вызова
24. Поясните основное назначение NODE.JS.
	для разработки веб-серверов, хорошо работает с операциями ввода-вывода (поиск по файлу, подсчет числа строк в файле,
	копирование директории)
25. Перечислите основные свойства NODE.JS.
	- использует паттерн Reactor
	- Быстродействие
	- Событийно-управляемая модель
	- Неблокирующие операции ввода-вывода
	- Единый язык программирования
	- Масштабируемость