1. Что такое Binding в WPF? Какие атрибуты мы можем указывать и 
для чего?

В WPF привязка (binding) является мощным инструментом программирования, без которого не обходится ни одно серьезное приложение.

Привязка подразумевает взаимодействие двух объектов: источника и приемника. 
Объект-приемник создает привязку к определенному свойству объекта-источника.

2. Что такое ADO.NET? Какие существуют режимы работы?

ADO.NET предоставляет собой технологию работы с данными, которая основана на платформе .NET Framework. 
Эта технология представляет нам набор классов, через которые мы можем отправлять запросы к базам данных, устанавливать подключения, получать ответ от базы данных и производить ряд других операций.
Существует 2 режима работы:
постоянное(активное) подключение
отсоединенные(автономные) данные
В постоянном подключении происходит установка соединения, подготовка и выполнение команды, работа с данными(чтение, запись и т.п), закрытие, соединение и обработка ошибок.
В отсоединенных данных происходит загрузка данных с сервера, изменение данных в наборе на локальной машине, обновление данных на сервере на основе локальной копии.

3.Объясните назначение класса SqlConnection.

Класс Connection позволяет устанавливать соединения с источником данных, с которым нужно взаимодействовать. 
Перед тем, как можно будет делать что-то еще (в том числе извлечение, удаление, вставка или обновление данных), понадобится установить соединение. 
Ключевые свойства и методы Connection определены интерфейсом IDbConnection, который реализуют все классы Connection.
Объект SqlConnection представляет уникальный доступ в источнику данных SQL Server.

4. Объясните назначение класса SqlDataAdapter.

Представляет набор команд данных и подключение к базе данных, которые используются для заполнения DataSet и обновления базы данных SQL Server. 
Этот класс не наследуется.
Класс DataSet из пространства имен System.Data представляет хранилище или кэш данных в памяти, извлеченных из источника данных. 
Объект DataSet содержит таблицы, которые представлены типом DataTable. 
Таблица DataTable, в свою очередь, состоит из столбцов и строк. 
Каждый столбец представляет объект DataColumn, а строка - объект DataRow.

5.Объясните назначение класса SqlException. Чем данный класс 
отключается от класса-родителя Exception?

Исключение, которое возникает, когда SQL Server возвращает предупреждение или ошибку. Этот класс не наследуется.
Exception - это стандартный класс, из которого все исключения наследовать. SQLException - это класс, наследуемый от Exception и который разработан специально для исключений базы данных (SQL).

6. Объясните назначение класса SqlCommand.

После установки подключения мы можем выполнить к базе данных какие-либо команды, например, добавить в базу данных объект, удалить, изменить его или просто извлечь. 
Команды представлены объектом интерфейса System.Data.IDbCommand. Провайдер для MS SQL предоставляет его реализацию в виде класса SqlCommand. 
Этот класс инкапсулирует sql-выражение, которое должно быть выполнено.

7.В чем разница между методами ExecuteNonQuery, ExecuteReader и
ExecuteScalar?

Чтобы выполнить команду, необходимо применить один из методов SqlCommand:
ExecuteNonQuery: просто выполняет sql-выражение и возвращает количество измененных записей. Подходит для sql-выражений INSERT, UPDATE, DELETE.
ExecuteReader: выполняет sql-выражение и возвращает строки из таблицы. Подходит для sql-выражения SELECT.
ExecuteScalar: выполняет sql-выражение и возвращает одно скалярное значение, например, число. Подходит для sql-выражения SELECT в паре с одной из встроенных функций SQL, как например, Min, Max, Sum, Count.

8.Объясните назначение класса SqlDataReader. 

Класс DataReader позволяет читать данные, возвращенные командой SELECT, по одной строке за раз, в однонаправленном, доступном только для чтения потоке. 
Иногда это называют курсором. 
Использование DataReader — простейший путь получения данных, но ему недостает возможностей сортировки и связывания автономного объекта DataSet. 
Однако DataReader представляет наиболее быстрый способ доступа к данным.

9. Объясните назначение класса SqlParameter.

Представляет параметр для объекта SqlCommand и (необязательно) его сопоставление со столбцами DataSet.

10.Объясните назначение класса SqlTransaction.

Транзакция — это набор операций, который должен либо выполниться успешно, либо не выполниться, причем как единое целое. Целью транзакции является гарантия того, что данные всегда находятся в корректном, согласованном состоянии.
Предоставляет транзакцию Transact-SQL, которая должна быть выполнена над базой данных SQL Server. Этот класс не наследуется.
Большинство поставщиков данных ADO.NET включают поддержку баз данных. Транзакции стартуют через объект Connection вызовом метода BeginTransaction(). Этот метод возвращает специфичный для поставщика объект Transaction, используемый для управления транзакцией. Все классы Transaction реализуют интерфейс IDbTransaction. Поставщики включают классы наподобие SqlTransaction, OleDbTransaction, OracleTransaction и т.д. реализующие этот интерфейс.
Класс Transaction предоставляет два ключевых метода:
Commit()
Этот метод указывает завершение транзакции и помещение выполненных изменений в источнике данных.
Rollback()
Этот метод указывает отмену транзакции. Неоконченные изменения отменяются, и состояние базы остается прежним.

11. Объясните назначение классов DataSet, DataTable, DataColumn, 
DataRow, DataRelation

После получения данных из базы данных через SqlDataAdapter в DataSet мы можем локально работать с этими данными вне зависимости от наличия подключения. 
Более того если нам даже и не надо использовать никакую базу данных, но при этом мы хотим иметь удобный функционал для работы с данными в виде наборов таблиц, то мы также можем воспользоваться классом DataSet.

Объект DataSet содержит таблицы, которые представлены типом DataTable. 
Таблица, в свою очередь, состоит из столбцов и строк. Каждый столбец представляет объект DataColumn, а строка - объект DataRow.
DataRelation-Представляет отношение "родительский-дочерний объект" между двумя объектами DataTable.












